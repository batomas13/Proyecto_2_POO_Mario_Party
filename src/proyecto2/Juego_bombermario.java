/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto2;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author tcoto
 */
public class Juego_bombermario extends JuegoGenerico {
    private int tablero = (new Random()).nextInt(2);
    private int Count_ganador = 0;
    public  static int ButtonSize;
    private int Cantidad_Bombas = 7;
    private int[][] Tesoro;
    private Jugador Jugador;
    private JButton[][] ArrayButton;
    private String Boomba;
    private String Direccion;
    /**
     * Creates new form Juego_boomberman
     */
    public Juego_bombermario(Jugador jugador) {
        Jugador = jugador;
        initComponents();
        initTablero();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Simples");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Dobles");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cruz");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Linea");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jButton1)
                .addGap(46, 46, 46)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(56, 56, 56)
                .addComponent(jButton4)
                .addGap(130, 130, 130))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Boomba = "Cruz";
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Boomba = "Simples";
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Boomba = "Dobles";
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Boomba = "Linea";
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void initTablero(){
        int punto_ganador;
        
        switch (tablero){
            case 0 -> {
                ArrayButton = new JButton[10][10];
                Tesoro = new int[10][10];
                ButtonSize = 54;
                for (int i = 0; i < 10; i++){
                    for (int j = 0; j < 10; j++){
                        ArrayButton[i][j] = new JButton();
                        Tesoro[i][j] = 0;
                        jPanel1.add(ArrayButton[i][j]);
                        ArrayButton[i][j].setBounds(i * ButtonSize, j * ButtonSize, ButtonSize, ButtonSize);
                        ArrayButton[i][j].addActionListener(listener);
                    }
                }
                punto_ganador = new Random().nextInt(10);
                if (punto_ganador+1 < 10){
                    Tesoro[punto_ganador][punto_ganador] = 1;
                    Tesoro[punto_ganador + 1][punto_ganador] = 1;
                    Tesoro[punto_ganador][punto_ganador + 1] = 1;
                    Tesoro[punto_ganador + 1][punto_ganador + 1] = 1;
                }
                else{
                    Tesoro[punto_ganador][punto_ganador] = 1;
                    Tesoro[punto_ganador - 1][punto_ganador] = 1;
                    Tesoro[punto_ganador][punto_ganador - 1] = 1;
                    Tesoro[punto_ganador - 1][punto_ganador - 1] = 1;
                }
                for (int i = 0; i < 10; i++){
                    for (int j = 0; j < 10; j++){
                        System.out.println(Tesoro[i][j] + " " + i + " " + j);
                    }
                    System.out.println("--------------");
                }
            }
            case 1 -> {
                ArrayButton = new JButton[15][15];
                Tesoro = new int[15][15];
                ButtonSize = 36;
                for (int i = 0; i < 15; i++){
                    for (int j = 0; j < 15; j++){
                        ArrayButton[i][j] = new JButton();
                        Tesoro[i][j] = 0;
                        jPanel1.add(ArrayButton[i][j]);
                        ArrayButton[i][j].setBounds(i * ButtonSize, j * ButtonSize, ButtonSize, ButtonSize);
                        ArrayButton[i][j].addActionListener(listener);
                    }
                }
                punto_ganador = new Random().nextInt(15);
                if (punto_ganador+1 < 15){
                    Tesoro[punto_ganador][punto_ganador] = 1;
                    Tesoro[punto_ganador + 1][punto_ganador] = 1;
                    Tesoro[punto_ganador][punto_ganador + 1] = 1;
                    Tesoro[punto_ganador + 1][punto_ganador + 1] = 1;
                }
                else{
                    Tesoro[punto_ganador][punto_ganador] = 1;
                    Tesoro[punto_ganador - 1][punto_ganador] = 1;
                    Tesoro[punto_ganador][punto_ganador - 1] = 1;
                    Tesoro[punto_ganador - 1][punto_ganador - 1] = 1;
                }
                for (int i = 0; i < 10; i++){
                    for (int j = 0; j < 10; j++){
                        System.out.println(Tesoro[i][j]);
                    }
                    System.out.println("--------------");
                }
            }
            case 2 -> {
                ArrayButton = new JButton[20][20];
                Tesoro = new int[20][20];
                ButtonSize = 27;
                for (int i = 0; i < 20; i++){
                    for (int j = 0; j < 20; j++){
                        ArrayButton[i][j] = new JButton();
                        Tesoro[i][j] = 0;
                        jPanel1.add(ArrayButton[i][j]);
                        ArrayButton[i][j].setBounds(i * ButtonSize, j * ButtonSize, ButtonSize, ButtonSize);
                        ArrayButton[i][j].addActionListener(listener);
                    }
                }
                punto_ganador = new Random().nextInt(20);
                if (punto_ganador+1 < 20){
                    Tesoro[punto_ganador][punto_ganador] = 1;
                    Tesoro[punto_ganador + 1][punto_ganador] = 1;
                    Tesoro[punto_ganador][punto_ganador + 1] = 1;
                    Tesoro[punto_ganador + 1][punto_ganador + 1] = 1;
                }
                else{
                    Tesoro[punto_ganador][punto_ganador] = 1;
                    Tesoro[punto_ganador - 1][punto_ganador] = 1;
                    Tesoro[punto_ganador][punto_ganador - 1] = 1;
                    Tesoro[punto_ganador - 1][punto_ganador - 1] = 1;
                }
                for (int i = 0; i < 10; i++){
                    for (int j = 0; j < 10; j++){
                        System.out.println(Tesoro[i][j]);
                    }
                    System.out.println("--------------");
                }
            }
            default -> {
            }
        }
    }
    
    private void boom(int y, int x){
        Cantidad_Bombas--;
        if (Cantidad_Bombas == 0){
            JOptionPane.showMessageDialog(this,"Perdio", "Perdio", JOptionPane.INFORMATION_MESSAGE);
            Jugador.setEsGanador(true);
            super.dispose();
        }
        System.out.println(y + " " + x);
        System.out.println(Boomba);
        switch (Boomba){
            case "Cruz" -> {
                if (can_cut(x+1, y) == true){
                    if (Tesoro[y][x+1] != 1){
                        jPanel1.remove(ArrayButton[y][x+1]);
                    }
                    else{
                        ArrayButton[y][x+1].setBackground(Color.red);
                        Count_ganador++;
                        if (Count_ganador == 4){
                            JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                            super.dispose();
                        }
                    }
                }
                if (Tesoro[y][x] != 1){
                    jPanel1.remove(ArrayButton[y][x]);
                }
                else{
                    ArrayButton[y][x].setBackground(Color.red);
                    Count_ganador++;
                    if (Count_ganador == 4){
                        JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                        super.dispose();
                    }
                }
                if (can_cut_negative_x(x-1) == true){
                    if (Tesoro[y][x-1] != 1){
                        System.out.println(x-1 + " " + "ES LA X");
                        jPanel1.remove(ArrayButton[y][x-1]);
                    }
                    else{
                        ArrayButton[y][x-1].setBackground(Color.red);
                        Count_ganador++;
                        if (Count_ganador == 4){
                            JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                            super.dispose();
                        }
                    }
                }
                if (can_cut(x, y+1) == true){
                    if (Tesoro[y+1][x] != 1){
                        jPanel1.remove(ArrayButton[y+1][x]);
                    }
                    else{
                        ArrayButton[y+1][x].setBackground(Color.red);
                        Count_ganador++;
                        if (Count_ganador == 4){
                            JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                            super.dispose();
                        }
                    }
                }
                if (can_cut_negative_y(y-1) == true){
                    if (Tesoro[y-1][x] != 1){
                        jPanel1.remove(ArrayButton[y-1][x]);
                    }
                    else{
                        ArrayButton[y-1][x].setBackground(Color.red);
                        Count_ganador++;
                        if (Count_ganador == 4){
                            JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                            super.dispose();
                        }
                    }
                }
                else{
                    if (Tesoro[y][x-1] != 1){
                        jPanel1.remove(ArrayButton[y][x-1]);
                    }
                    else{
                        ArrayButton[y][x-1].setBackground(Color.red);
                        Count_ganador++;
                        if (Count_ganador == 4){
                            JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                            super.dispose();
                        }
                    }
                }
            }
            case "Simples" -> {
                if (Tesoro[y][x] != 1){
                    jPanel1.remove(ArrayButton[y][x]);
                }
                else{
                    ArrayButton[y][x].setBackground(Color.red);
                    Count_ganador++;
                    if (Count_ganador == 4){
                        JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                        super.dispose();
                    }
                }
            }
            case "Dobles" -> {
                if (Tesoro[y][x] != 1){
                    jPanel1.remove(ArrayButton[y][x]);
                }
                else{
                    ArrayButton[y][x].setBackground(Color.red);
                    Count_ganador++;
                    if (Count_ganador == 4){
                        JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                        super.dispose();
                    }
                }
                if (Tesoro[y][x+1] != 1){
                    jPanel1.remove(ArrayButton[y][x+1]);
                }
                else{
                    ArrayButton[y][x+1].setBackground(Color.red);
                    Count_ganador++;
                    if (Count_ganador == 4){
                        JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                        super.dispose();
                    }
                }
            }
            case "Linea" -> {
                for (int i = 0; i < 4; i++){
                    if (Tesoro[y-i][x] != 1){
                        jPanel1.remove(ArrayButton[y-i][x]);
                    }
                    else{
                        ArrayButton[y-i][x].setBackground(Color.red);
                        Count_ganador++;
                        if (Count_ganador == 4){
                            JOptionPane.showMessageDialog(this,"Gano", "Gano", JOptionPane.INFORMATION_MESSAGE);
                            super.dispose();
                        }
                    }
                }
            }
            default -> {
            }
        }
        jPanel1.repaint();
    }
    private boolean can_cut(int x, int y){
        int cut = Tesoro.length;
        return cut > x && cut > y;
    }
    private boolean can_cut_negative_x(int x){
        if (x >= 0){
            Direccion = "Arriba";
            return true; 
        }
        return false;
    }
    private boolean can_cut_negative_y(int y){
        if (y >= 0){
            Direccion = "Arriba";
            return true; 
        }
        return false;
    }
    ActionListener listener = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            int x, y;
            int size = Juego_bombermario.ButtonSize;
            if (e.getSource() instanceof JButton) {  
                x = ((JButton) e.getSource()).getX() / size;
                y = ((JButton) e.getSource()).getY() / size;
                boom(x, y);
            }
        }
    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setEnemigo(String nombreEnemigo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
