/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import javax.swing.JOptionPane;

/**
 *
 * @author Adrian
 */
public class Juego_Cards extends JuegoGenerico {

    
    private ArrayList<String> mazo = new ArrayList<String>();
    private ArrayList<String> mano = new ArrayList<String>();
    private int[] valorCarta = new int[2];
    private int[] manos;
    private int[] ArrayAux;
    private ArrayList<Jugador> jugadores;
    private Jugador Prota;
    private int turnoActual = 0;
    
    /**
     * Creates new form Juego_Cards
     */
    public Juego_Cards(ArrayList<Jugador> refJugador, Jugador jugador) {
        initComponents();
        generaMazo();
        sacaMano(6);
        //separaValoresCarta(mano.get(0));
        manos = new int[refJugador.size()];
        ArrayAux = new int[refJugador.size()];
        jugadores = refJugador;
        Prota = jugador;
        turnoActual = refJugador.size() - refJugador.size();
        numeroJugador = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonCarta1 = new javax.swing.JButton();
        BotonCarta3 = new javax.swing.JButton();
        BotonCarta4 = new javax.swing.JButton();
        BotonCarta5 = new javax.swing.JButton();
        BotonCarta6 = new javax.swing.JButton();
        BotonCarta2 = new javax.swing.JButton();
        LabelCartaSeleccionada = new javax.swing.JLabel();
        LabelTurno = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotonCarta1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        BotonCarta1.setText("1");
        BotonCarta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCarta1ActionPerformed(evt);
            }
        });

        BotonCarta3.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        BotonCarta3.setText("3");
        BotonCarta3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCarta3ActionPerformed(evt);
            }
        });

        BotonCarta4.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        BotonCarta4.setText("4");
        BotonCarta4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCarta4ActionPerformed(evt);
            }
        });

        BotonCarta5.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        BotonCarta5.setText("5");
        BotonCarta5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCarta5ActionPerformed(evt);
            }
        });

        BotonCarta6.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        BotonCarta6.setText("6");
        BotonCarta6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCarta6ActionPerformed(evt);
            }
        });

        BotonCarta2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        BotonCarta2.setText("2");
        BotonCarta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCarta2ActionPerformed(evt);
            }
        });

        LabelCartaSeleccionada.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        LabelCartaSeleccionada.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelCartaSeleccionada.setText("CARTA SELECCIONADA:");

        LabelTurno.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        LabelTurno.setText("TURNO: JUGADOR1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonCarta1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotonCarta2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(BotonCarta3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonCarta4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotonCarta5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotonCarta6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelCartaSeleccionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCartaSeleccionada, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonCarta1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonCarta4, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonCarta3, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonCarta6, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonCarta2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonCarta5, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonCarta5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCarta5ActionPerformed
        // TODO add your handling code here:
        System.out.println("Carta: " + mano.get(4));
        LabelCartaSeleccionada.setText("CARTA SELECCIONADA: " + mano.get(4));
        separaValoresCarta(mano.get(4));
         recibeCarta(4);
        turnoActual++;
        LabelTurno.setText("TURNO: JUGADOR" + turnoActual);
    }//GEN-LAST:event_BotonCarta5ActionPerformed

    private void BotonCarta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCarta1ActionPerformed
        // TODO add your handling code here:
        System.out.println("Carta: " + mano.get(0));
        System.out.println("Numero de jugador: " + numeroJugador + ", Turno: " + turnoActual);
        LabelCartaSeleccionada.setText("CARTA SELECCIONADA: " + mano.get(0));
        separaValoresCarta(mano.get(0));
        recibeCarta(0);
        turnoActual++;
        LabelTurno.setText("TURNO: JUGADOR" + turnoActual);
    }//GEN-LAST:event_BotonCarta1ActionPerformed

    private void BotonCarta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCarta2ActionPerformed
        // TODO add your handling code here:
        System.out.println("Carta: " + mano.get(1));
        System.out.println("Numero de jugador: " + numeroJugador + ", Turno: " + turnoActual);
        LabelCartaSeleccionada.setText("CARTA SELECCIONADA: " + mano.get(1));
        separaValoresCarta(mano.get(1));
        recibeCarta(1);
        turnoActual++;
        LabelTurno.setText("TURNO: JUGADOR" + turnoActual);
    }//GEN-LAST:event_BotonCarta2ActionPerformed

    private void BotonCarta3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCarta3ActionPerformed
        // TODO add your handling code here:
        System.out.println("Carta: " + mano.get(2));
        System.out.println("Numero de jugador: " + numeroJugador + ", Turno: " + turnoActual);
        LabelCartaSeleccionada.setText("CARTA SELECCIONADA: " + mano.get(2));
        separaValoresCarta(mano.get(2));
        recibeCarta(2);
        turnoActual++;
        LabelTurno.setText("TURNO: JUGADOR" + turnoActual);
    }//GEN-LAST:event_BotonCarta3ActionPerformed

    private void BotonCarta4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCarta4ActionPerformed
        // TODO add your handling code here:
        System.out.println("Carta: " + mano.get(3));
        System.out.println("Numero de jugador: " + numeroJugador + ", Turno: " + turnoActual);
        LabelCartaSeleccionada.setText("CARTA SELECCIONADA: " + mano.get(3));
        separaValoresCarta(mano.get(3));
        recibeCarta(3);
        turnoActual++;
        LabelTurno.setText("TURNO: JUGADOR" + turnoActual);
    }//GEN-LAST:event_BotonCarta4ActionPerformed

    private void BotonCarta6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCarta6ActionPerformed
        // TODO add your handling code here:
        System.out.println("Carta: " + mano.get(5));
        System.out.println("Numero de jugador: " + numeroJugador + ", Turno: " + turnoActual);
        LabelCartaSeleccionada.setText("CARTA SELECCIONADA: " + mano.get(5));
        separaValoresCarta(mano.get(5));
        recibeCarta(5);
        turnoActual++;
        LabelTurno.setText("TURNO: JUGADOR" + turnoActual);
    }//GEN-LAST:event_BotonCarta6ActionPerformed

    public void generaMazo() {
        String cartaTemporal = "";
        
        for (int i = 0; i < 4; i++) {
            for (int j = 2; j < 15; j++) {
                // prepara el valor del palo
                switch(i) {
                    case 0 -> cartaTemporal = "Diamantes";
                    case 1 -> cartaTemporal = "Espadas";
                    case 2 -> cartaTemporal = "Tréboles";
                    case 3 -> cartaTemporal = "Corazones";
                }
                // están puestas de tal manera que corazones, el palo mayor, tenga el indice mayor aqui tambien
                // prepara el valor nominal
                // concatene el valor del indice
                if (j <= 10) {
                    cartaTemporal += "," + j;
                } else if (j == 11) {
                    cartaTemporal += ",J";
                } else if (j == 12) {
                    cartaTemporal += ",Q";
                } else if (j == 13) {
                    cartaTemporal += ",K";
                } else {
                    cartaTemporal += ",A";
                }
                mazo.add(cartaTemporal);
            }
        }
        
        Collections.shuffle(mazo);
        System.out.println(mazo);
        
    }
    
    public void sacaMano(int cantidadCartas) {
        for (int i = 0; i < cantidadCartas; i++) {
            mano.add(mazo.get(i));
        }
        System.out.println("Mano: " + mano);
    }
    
    public void separaValoresCarta(String carta) {
        int GanadorIndex;
        String[] valores = carta.split(",");
        switch (valores[0]) {
            case "Diamantes" -> valorCarta[0] = 0;
            case "Espadas" -> valorCarta[0] = 1;
            case "Tréboles" -> valorCarta[0] = 2;
            case "Corazones" -> valorCarta[0] = 3;
        }
        switch (valores[1]) {
            case "J" -> valorCarta[1] = 11;
            case "Q" -> valorCarta[1] = 12;
            case "K" -> valorCarta[1] = 13;
            case "A" -> valorCarta[1] = 14;
            default -> valorCarta[1] = Integer.parseInt(valores[1]);
        }
        manos[turnoActual] = valorCarta[0] + valorCarta[1];
        ArrayAux[turnoActual] = valorCarta[0] + valorCarta[1];
        if (turnoActual == jugadores.size() - 1){
            System.out.println("SACA GANADOR");
            Arrays.sort(ArrayAux);
            GanadorIndex = GetWinner();
            if(jugadores.get(GanadorIndex) != Prota){
                Prota.setEsGanador(true);
            }
            JOptionPane.showMessageDialog(this,"Gano " + jugadores.get(GanadorIndex).getNombre() , "Ganador", JOptionPane.INFORMATION_MESSAGE);
            super.dispose();
        }
    }
    
    // recibe la carta del thread y deshabilita para todos los clientes
    public void recibeCarta(int cartaIndex) {
        switch(cartaIndex) {
            case 1 -> BotonCarta1.setEnabled(false);
            case 2 -> BotonCarta2.setEnabled(false);
            case 3 -> BotonCarta3.setEnabled(false);
            case 4 -> BotonCarta4.setEnabled(false);
            case 5 -> BotonCarta5.setEnabled(false);
            case 6 -> BotonCarta6.setEnabled(false);
        }
    }

    private int GetWinner(){
        for (int i = 0; i < manos.length; i++){
            if (ArrayAux[ArrayAux.length - 1] == manos[i]){
                System.out.println(i);
                
            }
        }
        return 0;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCarta1;
    private javax.swing.JButton BotonCarta2;
    private javax.swing.JButton BotonCarta3;
    private javax.swing.JButton BotonCarta4;
    private javax.swing.JButton BotonCarta5;
    private javax.swing.JButton BotonCarta6;
    private javax.swing.JLabel LabelCartaSeleccionada;
    private javax.swing.JLabel LabelTurno;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setEnemigo(String nombreEnemigo) {
        System.out.println("Llegué a set enemigo con mensaje: " + nombreEnemigo);
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
